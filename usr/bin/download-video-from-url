#!/bin/bash
SOURCE="$0"
source /usr/lib/elive-tools/functions
EL_REPORTS="1"
el_make_environment
. gettext.sh
TEXTDOMAIN="elive-tools"
export TEXTDOMAIN

main(){
    # dependencies {{{
    if ! el_dependencies_check "yt-dlp" ; then
        el_dependencies_install "yt-dlp"
    fi
    if ! el_dependencies_check "urxvt" ; then
        el_dependencies_install "rxvt-unicode"
    fi

    # }}}

    download_dir="$( xdg-user-dir DOWNLOAD )/Videos"
    mkdir -p "$download_dir"
    cd "$download_dir"

    # messages {{{
    local message_finished
    message_finished="$( printf "$( eval_gettext "Download Finished" )" "" )"
    local message_download_where
    message_download_where="$( printf "$( eval_gettext "Your download has been completed in:" )" "" ):\n${download_dir}"
    local message_failed
    message_failed="$( printf "$( eval_gettext "Download Failed" )" "" )"
    local message_failed_where
    message_failed_where="$( printf "$( eval_gettext "Your download has failed, try to download manually using the command yt-dlp" )" "" )"
    local message_delete
    message_delete="$( printf "$( eval_gettext "Delete" )" "" )"
    local message_keep
    message_keep="$( printf "$( eval_gettext "Keep" )" "" )"
    local message_what_to_do
    message_what_to_do="$( printf "$( eval_gettext "Download failed, what you want to do with the half-downloaded files?" )" "" )"


    # - messages }}}

    ( urxvt -e bash -c "
    #!/bin/bash
    source /usr/lib/elive-tools/functions
    rm -rf \"${download_dir}/tmp\" ; mkdir -p \"${download_dir}/tmp\" ; cd \"${download_dir}/tmp\"

    if test -n \"$1\" ; then
        if yt-dlp \
            -f mp4 --embed-metadata --embed-chapters \
            \"$@\" ; then
            is_downloaded=1
        else
            if yt-dlp \
                -i \"$@\" ; then
                is_downloaded=1
            fi
        fi
    fi

    if ((is_downloaded)) ; then
        cd \"${download_dir}\"
        mv -f \"${download_dir}/tmp/\"* \"${download_dir}/\"
        rm -rf \"${download_dir}/tmp\"
        el_notify normal emblem-downloads '${message_finished}' '${message_download_where}'
    else
        el_notify normal dialog-error '${message_failed}' '${message_failed_where}'

        if zenity --question --cancel-label='${message_delete}' --ok-label='${message_keep}' --text='${message_what_to_do}' ; then
            exo-open '${download_dir}/tmp'
        else
            rm -rf \"${download_dir}/tmp\"
        fi
    fi

    sleep 10
    " & )

}

#
#  MAIN
#
main "$@"

# vim: set foldmethod=marker :
