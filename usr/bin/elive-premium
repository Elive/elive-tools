#!/bin/bash
SOURCE="$0"
source /usr/lib/elive-tools/functions
# EL_REPORTS="1"
el_make_environment
. gettext.sh
TEXTDOMAIN="elive-tools"
export TEXTDOMAIN
set -e


ssh_key_check(){
    # check ssh ID key
    if [[ ! -s ~/.ssh/id_rsa.pub ]] && [[ ! -s ~/.ssh/id_ed25519.pub ]] && [[ ! -s ~/.ssh/id_ecdsa.pub ]] ; then
        el_warning "$( eval_gettext "You don't have a SSH key configured, please create one and add it to your Github account in order to have access to some Elive Premium features." )"
        if el_confirm "$( eval_gettext "Do you want to create a new SSH key now? Otherwise you need to import your existing keys into your:" ) ~/.ssh/id_rsa.pub" ; then
            ssh-keygen -t ed25519 -C "$patreon_email"
        fi
    fi
}

premium_status_get(){
    # get premium status
    patreon_email_checksum="$( echo "$patreon_email" | sha1sum | awk '{print $1}' )"
    if curl -Ls -m 10 -A "Mozilla/5.0" https://www.elivecd.org/files/patreon_members.txt | grep -qs "^${patreon_email_checksum}$" ; then
        is_premium_new=1
    else
        is_premium_new=0
    fi
}

github_login_required(){
    el_notify_user "normal" "logo-elive" "Important" "$( eval_gettext "You need to be logged on Github and having accepted the invitation of joining the Elive-Premium github organization in order to view this page." )"
}

github_access_check(){
    local result is_cloned

    rm -rf "/tmp/${USER}-elivepremium-test.git" || true

    # check github access
    echo -e "Testing access to the Elive Premium Github repository..." 1>&2
    if timeout 20 git clone --quiet git@github.com:Elive-Premium/.github.git "/tmp/${USER}-elivepremium-test.git" ; then
        is_cloned=1
    fi

    rm -rf "/tmp/${USER}-elivepremium-test.git" || true

    if ! ((is_cloned)) ; then
        el_error "$( eval_gettext "You don't have access to the Elive Premium Github repository, for that first add your SSH key to your Github account." )"
        # el_info "$( eval_gettext "Instructions: You need to add your SSH key to your Github account, you can do it from the following link:" )"

        # copy keys to clipboard
        if cat ~/.ssh/id_rsa.pub ~/.ssh/id_ed25519.pub ~/.ssh/id_ecdsa.pub 2>/dev/null | xclip -i ; then
            el_info "SSH Pub Key copied to clipboard (copy-paste)"
        else
            el_info "Copy the contents of your ~/.ssh/id_*.pub file and add it to your Github account"
        fi

        if el_confirm "$( eval_gettext "Do you want to open the Github SSH key configuration page to add it now?" )"; then
            web-launcher "https://github.com/settings/ssh/new"
        fi
    fi

    if ! ((is_cloned)) ; then
        echo -e "Testing access to the Elive Premium Github repository..." 1>&2
        if ! timeout 20 git clone --quiet git@github.com:Elive-Premium/.github.git "/tmp/${USER}-elivepremium-test.git" ; then
            el_error "$( eval_gettext "You still don't have access to the Elive Premium Github repository. Make sure you already have received and accepted the invitation to join it. Exiting..." )"
            exit 1
        fi
    fi
}

premium_elivim(){
    # Elivim
    el_info "Elivim. An amazing framework for the NeoVim editor"
    if el_confirm "$( eval_gettext "Do you want to install the Elivim framework of Neovim?" )" ; then
        el_info "$( eval_gettext "Follow the instructions on the terminal." )"

        # github_login_required 
        # web-launcher "https://github.com/Elive-Premium/elive-for-servers"

        el_dependencies_install "neovim|git|python3-venv|fonts-noto-color-emoji|ripgrep|nodejs|npm|gcc"
        git clone git@github.com:Elive-Premium/Elivim /tmp/elivim-$$ --depth 1 && /tmp/elivim-$$/elivim --reinstall ; rm -rf /tmp/elivim-$$
    fi
}

premium_assistant(){
    # Assistant
    el_info "Elive AI. Handy tools to use AI in your system"
    if el_confirm "$( eval_gettext "Do you want to install elive-assistant with its many AI features?" )" ; then
        el_dependencies_install "elive-assistant"
    fi
}

premium_gptuuu(){
    # gptuuu
    el_info "GPT Uncensored, Unbiased, Untracked"
    if el_confirm "$( eval_gettext "Do you want to install a local AI conversation system in your machine?" )" ; then
        el_info "$( eval_gettext "Follow the instructions on the terminal." )"

        el_dependencies_install "git"
        git clone git@github.com:Elive-Premium/gptuuu /tmp/gptuuu-$$ --depth 1 && /tmp/gptuuu-$$/installer.sh ; rm -rf /tmp/elivim-$$
    fi
}

premium_servers(){
    # Servers
    el_info "Elive for Servers, enhancer and more..."
    if el_confirm "$( eval_gettext "Do you want to enhance your Servers with Elive features? Continue to know more information." )" ; then
        el_info "$( eval_gettext "Check the website of the project to know how to use it for your servers." )"
        github_login_required
        web-launcher "https://github.com/Elive-Premium/elive-for-servers"
    fi
}




main(){
    # pre {{{

    [[ -s /etc/elive/settings ]] && source /etc/elive/settings

    if ! el_dependencies_check "git|curl|ssh-keygen|xclip" ; then
        el_dependencies_install "git|curl|openssh-client|xclip"
    fi

    case "$( cat /etc/debian_version )" in
        12.*|"bookworm"*)
            is_bookworm=1
            ;;
        # 11.*|"bullseye"*)
        #     is_bullseye=1
        #     is_old_rdiff=1
        #     ;;
        # 10.*|9.*|8.*)
        #     is_old_rdiff=1
        #     ;;
        # *)
            #     is_new=1
            #     ;;
    esac

    if ! ((is_bookworm)) ; then
        el_error "$( eval_gettext "This feature is only available for Elive 3.8.40+ which is based on Bookworm or newer." )"
        exit 1
    fi

    is_premium_new=0


    # }}}

    if [[ -n "$patreon_email" ]] ; then
        premium_status_get
    fi

    if ! ((is_premium_new)) ; then
        el_info "$( eval_gettext "To be an Elive Premium user, you need to join the Patreon of Elive." )"
        if ! el_confirm "$( eval_gettext "Do you already know the benefits and extra features of Elive Premium?" )" ; then
            web-launcher "https://www.elivecd.org/premium/"
        fi
        if el_confirm "$( eval_gettext "Do you want to open the Patreon page to become Premium?" )" ; then
            web-launcher "https://www.patreon.com/elive"
        fi

        local message_email
        message_email="$( printf "$( eval_gettext "Insert your Email used in your Patreon account." )" "" )"

        el_info "$message_email"
        read patreon_email

        echo "" 1>&2

        premium_status_get
    fi


    # update values
    if [[ "$is_premium_new" != "$is_premium_user" ]] ; then
        el_info "Insert your admin password to save the configuration"
        gksu bash -c "source /usr/lib/elive-tools/functions ;
        sed -i '/^patreon_email=/d' '/etc/elive/settings' 2>/dev/null || true
        echo 'patreon_email=\"$patreon_email\"' >> /etc/elive/settings
        sed -i '/^is_premium_user=/d' '/etc/elive/settings' 2>/dev/null || true
        echo 'is_premium_user=\"${is_premium_new}\"' >> /etc/elive/settings
        "
    fi
    is_premium_user="$is_premium_new"

    # verify
    if ! ((is_premium_user)) ; then
        el_error "$( eval_gettext "This Email is not from a Premium user. Try using the same one assigned in your Patreon account." )"
        el_info "$( eval_gettext "Instructions: If your Patreon account has a different email configured you must change it. Note that this email will be the one used to access to the Github Premium section too." )"
        exit
    fi

    ssh_key_check
    github_access_check

    echo "" 1>&2
    el_info "*** Premium Features ready ***"
    echo "" 1>&2

    case "$1" in
        elivim|neovim)
            premium_elivim
            exit
            ;;
        assistant|ai)
            premium_assistant
            exit
            ;;
        gptuuu|gpt-uuu)
            premium_gptuuu
            exit
            ;;
        servers|server)
            premium_servers
            exit
            ;;
        *)
            el_error "Unknown installer $1"
            ;;
    esac

    # show all of them
    # first run a normal window so that the CSS/JS of the website will load correctly
    web-launcher \
        web-launcher "https://github.com/Elive-Premium"
        $NULL
    sleep 2

    web-launcher \
        "https://www.elivecd.org/premium/elive-for-servers/" \
        "https://www.elivecd.org/premium/elivim-neovim-framework/" \
        $NULL
        # "https://www.elivecd.org/premium/ai/" \

    # launch each one:
    premium_elivim
    premium_assistant
    premium_gptuuu
    premium_servers


}

#
#  MAIN
#
main "$@"

# vim: set foldmethod=marker :
