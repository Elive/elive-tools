#!/bin/sh

# Check if the first argument is provided
if [ -z "$1" ]; then
    echo "Usage: $( basename $0 ) {up|down}"
    exit 1
fi

# Get the current brightness level in percentage and raw integer value
current_brightness="$(brightnessctl -m i)"
current_brightness_percent="$(echo "$current_brightness" | awk -F',' '{print $4}' | tr -d '%')"
current_brightness_value="$(echo "$current_brightness" | awk -F',' '{print $3}')"

# Define the increment based on the current brightness percentage
if [ "$current_brightness_percent" -ge 50 ]; then
    increment=6
elif [ "$current_brightness_percent" -ge 20 ]; then
    increment=4
elif [ "$current_brightness_percent" -ge 10 ]; then
    increment=2
elif [ "$current_brightness_percent" -lt 2 ]; then
    # Special case: If brightness is below 2%, set increment to 0 and adjust using raw integer
    increment=0
else
    increment=1
fi

el_debug "Current brightness: $current_brightness_percent% ($current_brightness_value), Increment assigned to: $increment"

# Adjust the brightness based on the argument provided (up or down)
if [ "$1" = "up" ]; then
    if [ "$increment" -eq 0 ]; then
        # Special case: Adjust brightness directly based on integer value
        sudo -n brightnessctl s $((current_brightness_value + 1))
    else
        sudo -n brightnessctl s ${increment}%+
    fi
elif [ "$1" = "down" ]; then
    if [ "$increment" -eq 0 ]; then
        # Special case: Adjust brightness directly based on integer value
        sudo -n brightnessctl s $((current_brightness_value - 1))
    else
        sudo -n brightnessctl s ${increment}%-
    fi
else
    echo "Invalid argument. Use 'up' or 'down'."
    exit 1
fi
